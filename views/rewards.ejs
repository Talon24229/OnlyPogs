<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style.css">
    <title>Rewards</title>
</head>

<body>
    <!--A div containing the buttons and any other forms that do various things-->
    <div id="tagDropDown">
        <!--Filters the types using a drop down-->
        <select name="rTagFilter" id="rTagFilter" onchange="filterTags()">
            <option value="">All Tags</option>
            <% const uniqueTags=Array.from(new Set(rows.map(row=> row.type))); %>
            <% for (let i=0; i < uniqueTags.length; i++) { %>
                <option value="<%= uniqueTags[i] %>">
                    <%= uniqueTags[i] %>
                </option>
                <% } %>
            </select>
            <!-- <button><a href="/acc">Account</a></button> -->
            <button><a href="/pogtable">Pogs</a></button>
            <button><a href="/rDetails">Reward Details</a></button>
            <!-- <button onclick='addItem()' id="add"><a>Add Row</a></button> -->
            Pog Rewards
    </div> <br>
    <table id="table">
        <thead id="tableHead">
            <!--Table heads that can sort by clicking them-->
            <th onclick='sortTableAlphabetically(0)' id="item"><a>Item</a></th>
            <th onclick='sortTableNumerically(1)' id="cost"><a>Cost</a></th>
            <th onclick='sortTableAlphabetically(2)' id="type"><a>Type</a></th>
            <th></th>

        </thead>
        <tbody id="table-body">
            <% for(let i=0; i < rows.length; i++) { %>
                <tr id="<%- rows[i].uid %>" class="table-rows">
                    <!--The item column has links set up for when formbar implementation is fully complete-->
                    <!--The idea is to use the links to allow students to buy rewards-->
                    <td name="item" id="<%- rows[i].item %>"><a href="<%- rows[i].url %>"><%- rows[i].item %></a></td>
                    <td name="cost" id="<%- rows[i].cost %>"><a><%- rows[i].cost %></a></td>
                    <td name="type" id="<%- rows[i].type %>"><a><%- rows[i].type %></a></td>
                    <td id="buttons">
                        <!-- <button data-eButton="<%- rows[i].uid %>" class="editButton"
                            onclick="editItem(this.getAttribute('data-eButton'))"><a>Edit</a></button>
                        <button data-dButton="<%- rows[i].uid %>" class="deleteButton"
                            onclick="deleteItem(this.getAttribute('data-dButton'))"><a>Delete</a></button> -->
                    </td>
                </tr>
                <% } %>
        </tbody>
    </table>

</body>
<script>

    const appendItem = ''

    // Beautifying adds spaces between the percent and dash and will cause errors, if you do beautify just remember to remove the spaces
    // var userPerm = 3;

    var data = <%- JSON.stringify(rows) %>;

    // console.log(uid)
    var filteredData = [];


    // if (userPerm < 3) {
    //     document.getElementById("add").style.display = "none"
    //     for (let i = 0; i < data.length; i++) {
    //         document.getElementsByClassName("deleteButton")[i].style.display = "none"
    //         document.getElementsByClassName("editButton")[i].style.display = "none"
    //         // document.getElementById("table").style.emptyCells = "show";
    //     }
    // }



    var currentSortOrder = 'asc'

    //Used to toggle the sort order by changing it from alphabetically ascending to decending
    function toggleSortOrder() {
        if (currentSortOrder === 'asc') {
            currentSortOrder = 'desc'
        } else {
            currentSortOrder = 'asc'
        }
    }

    function sortTableAlphabetically(columnIndex) {
        toggleSortOrder()
        const tableBody = document.getElementById('table-body');
        const rowsArray = Array.from(tableBody.rows);

        rowsArray.sort((a, b) => {
            const cellA = a.cells[columnIndex].textContent;
            const cellB = b.cells[columnIndex].textContent;

            // Adjust this comparison for your specific data
            if (currentSortOrder === 'asc') {
                return cellA.localeCompare(cellB);
            } else if (currentSortOrder === 'desc') {
                return cellB.localeCompare(cellA);
            }
        });

        rowsArray.forEach(row => tableBody.appendChild(row));
    };


    //Sorts the table numerically by the Cost column
    function sortTableNumerically(columnIndex) {
        toggleSortOrder()
        const tableBody = document.getElementById('table-body');
        const rowsArray = Array.from(tableBody.rows);

        rowsArray.sort((a, b) => {
            const cellA = parseFloat(a.cells[columnIndex].textContent);
            const cellB = parseFloat(b.cells[columnIndex].textContent);

            if (currentSortOrder === 'asc') {
                return cellA - cellB;
            } else {
                return cellB - cellA;
            }
        });

        rowsArray.forEach(row => tableBody.appendChild(row));
    }


    function resetOrder() {
        filteredData = [];
        updateTable(data);
    }

    //The fuction used for the types drop down
    function filterTags() {
        // Get the selected tag from the dropdown
        var selectedTag = document.getElementById('rTagFilter').value;

        // Get all table rows
        var rows = document.getElementById('table').getElementsByTagName('tr');

        // Loop through each row
        for (var i = 1; i < rows.length; i++) {
            // If the selected tag is 'All Tags', show all rows
            if (selectedTag === '') {
                rows[i].style.display = '';
            } else {
                // Get the tag for this row
                var rowTag = rows[i].getElementsByTagName('td')[2].innerText;

                // If the selected tag matches the row's tag, show the row
                if (rowTag === selectedTag) {
                    rows[i].style.display = '';
                } else {
                    // Otherwise, hide the row
                    rows[i].style.display = 'none';
                }
            }
        }
    }
    // function resetFilterAndSort() {
    //     filteredData = []; // Reset the filtered data
    //     updateTable(data); // Update the table with the original data
    // }

    // Adds an Item to the table
    // function addItem() {
    //     // form element
    //     var br = document.createElement("br");
    //     var form = document.createElement("form");
    //     form.setAttribute("method", "post");
    //     form.setAttribute("action", "addItem");

    //     // item input element
    //     var item = document.createElement("input");
    //     item.setAttribute("type", "text");
    //     item.setAttribute("name", "item");
    //     item.setAttribute("placeholder", "item");

    //     // cost input element
    //     var cost = document.createElement("input");
    //     cost.setAttribute("type", "text");
    //     cost.setAttribute("name", "cost");
    //     cost.setAttribute("placeholder", "cost");

    //     // type input element
    //     var type = document.createElement("input");
    //     type.setAttribute("type", "text");
    //     type.setAttribute("name", "type");
    //     type.setAttribute("placeholder", "type");

    //     // userPerm input element
    //     var userPermInput = document.createElement("input");
    //     userPermInput.setAttribute("type", "hidden");
    //     userPermInput.setAttribute("name", "userPerm");
    //     userPermInput.setAttribute("value", userPerm);
    //     form.appendChild(userPermInput);

    //     // submit input element
    //     var s = document.createElement("input");
    //     s.setAttribute("type", "submit");
    //     s.setAttribute("value", "Submit");

    //     // appending input elements to form
    //     form.appendChild(item);
    //     form.appendChild(br.cloneNode());

    //     form.appendChild(cost);
    //     form.appendChild(br.cloneNode());

    //     form.appendChild(type);
    //     form.appendChild(br.cloneNode());
    //     form.appendChild(s);

    //     // appending form to body
    //     document.getElementsByTagName("body")[0].appendChild(form);
    // }


    // // Edits an item from the table
    // function editItem(buttonUid) {

    //     console.log(`Button Uid: ${buttonUid}`)

    //     // form element
    //     var form = document.createElement("form");
    //     form.setAttribute("method", "post");
    //     form.setAttribute("action", "editItem");

    //     // uid input element
    //     var uid = document.createElement("input");
    //     uid.setAttribute("type", "hidden")
    //     uid.setAttribute("name", "uid")
    //     uid.setAttribute("value", buttonUid)

    //     // item input element
    //     var item = document.createElement("input");
    //     item.setAttribute("type", "text");
    //     item.setAttribute("name", "item");
    //     item.setAttribute("placeholder", "item");

    //     // cost input element
    //     var cost = document.createElement("input");
    //     cost.setAttribute("type", "text");
    //     cost.setAttribute("name", "cost");
    //     cost.setAttribute("placeholder", "cost");

    //     var userPermInput = document.createElement("input");
    //     userPermInput.setAttribute("type", "hidden");
    //     userPermInput.setAttribute("name", "userPerm");
    //     userPermInput.setAttribute("value", userPerm);
    //     form.appendChild(userPermInput);

    //     // type input element
    //     var type = document.createElement("input");
    //     type.setAttribute("type", "text");
    //     type.setAttribute("name", "type");
    //     type.setAttribute("placeholder", "type");


    //     // submit input element
    //     var s = document.createElement("input");
    //     s.setAttribute("type", "submit");
    //     s.setAttribute("value", "Submit");

    //     // appending input elements to form
    //     form.appendChild(uid);
    //     form.appendChild(item);
    //     form.appendChild(cost);
    //     form.appendChild(type);
    //     form.appendChild(s);

    //     // appending form to body
    //     document.getElementsByTagName("body")[0].appendChild(form);
    // }

    // // Deletes an Item from the table
    // function deleteItem(buttonUid) {

    //     console.log(buttonUid)

    //     // form element
    //     var form = document.createElement("form");
    //     form.setAttribute("method", "post");
    //     form.setAttribute("action", "deleteItem");

    //     // uid input element
    //     var uid = document.createElement("input");
    //     uid.setAttribute("type", "hidden")
    //     uid.setAttribute("name", "uid")
    //     uid.setAttribute("placeholder", "uid")
    //     uid.setAttribute("value", buttonUid);

    //     // userPerm input element
    //     var userPermInput = document.createElement("input");
    //     userPermInput.setAttribute("type", "hidden");
    //     userPermInput.setAttribute("name", "userPerm");
    //     userPermInput.setAttribute("value", userPerm);
    //     form.appendChild(userPermInput);

    //     // submit input element
    //     var s = document.createElement("input");
    //     s.setAttribute("type", "submit");
    //     s.setAttribute("value", "Submit");

    //     // appending input elements to form
    //     form.appendChild(uid);
    //     form.appendChild(s);
    //     form.submit()

    //     // appending form to body
    //     document.getElementsByTagName("body")[0].appendChild(form)
    // }

    //Updates the table after sorting
    function updateTable(updateData, buttonUid) {
        const tableBody = document.getElementById('table-body');
        const tableHead = document.getElementById('tableHead');
        tableBody.innerHTML = '';
        updateData.forEach((row) => {

            const aCost = document.createElement('a')
            const aType = document.createElement('a')
            const ebText = document.createElement('a')
            const dbText = document.createElement('a')

            aCost.textContent = row.cost
            aType.textContent = row.type
            ebText.textContent = 'Edit'
            dbText.textContent = 'Delete'

            const eButton = document.createElement('button')
            const dButton = document.createElement('button')

            eButton.onclick = editItem
            dButton.onclick = deleteItem
            eButton.appendChild(ebText)
            dButton.appendChild(dbText)

            const tr = document.createElement('tr');
            const tdItem = document.createElement('a');
            const tdCost = document.createElement('td');
            const tdType = document.createElement('td');
            const tdButtons = document.createElement('td')

            tdCost.appendChild(aCost)
            tdType.appendChild(aType)
            tdButtons.appendChild(eButton)
            tdButtons.append(dButton)

            tdItem.href = row.url;
            tdItem.textContent = row.item;
            tdItem.innerHTML = row.item;

            eButton.setAttribute('data-eButton', buttonUid)
            dButton.setAttribute('data-dButton', buttonUid)

            tr.appendChild(tdItem);
            tr.appendChild(tdCost);
            tr.appendChild(tdType);
            tr.appendChild(tdButtons)
            tableBody.appendChild(tr);
        });
    }

</script>

</html>